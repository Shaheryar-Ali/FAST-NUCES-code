#include<iostream>
usingnamespace std;
struct node
{
    int data;
    node *next;
    node *prev;
};
void addnode();
void delnode();
void display();
node *start=NULL, *temp1, *temp2, *temp3;

int main()
{ 
    char ch;
    do
    {
        char i;
        cout<<"Press 'a' to add node , 'd' to delete"<<endl;
        cout<<" 'v' for display"<<endl;
        cin>>i;
       switch (i)
       {
       case'a':
          addnode();
          break;
       case'd':
          delnode();
          break;
       case'v' :
          display();
          break;
       default:
          cout<<"Wrong input"<<endl;
          break;
       }
       cout<<"want to process more y/n"<<endl;
       cin>>ch;
     }
     while(ch!='n'); 
       return 0;
}
void addnode()          //adding node
{
    char r;
    temp1=new node;
   
   cout<<"enter int to store"<<endl;
    cin>>temp1->data;
    
	cout<<"press 's' to add in start,'m' for midd , 'e' for end"<<endl;
    cin>>r;
    
	switch (r)
    {
    case's':                 //add startif(start==NULL)
        {
            start=temp1;
            temp1->next=NULL;
            temp1->prev=NULL;
        }
        else
        {
            temp2=start;
            temp1->next=temp2;
            temp1->prev=NULL;
            start=temp1;
            temp2->prev=temp1;
        }
        break;
    case'e':               //add end
        
	/* INSERT YOUR CODE*/
		
        break;
    case'm':                //add mid
        cout<<"enter node after which you want to enter"<<endl;
        cin>>num;
      
	  /* INSERT YOUR CODE*/
        
		break;
    }
}
void display()        //displaying
{
   
    temp3=start;
    if(start==NULL)
        cout<<"no node to display"<<endl;
    else
    {
      while(temp3->next!=NULL)
      {
          cout<<"Data stored is "<<temp3->data<<" at "<<temp3<<endl;
         temp3=temp3->next;
      }
      cout<<"Data stored is "<<temp3->data<<" at "<<temp3<<endl;
    }
}
void delnode()           //deleting
{  
    
    char d;
    cout<<"press 's' to delete from start,'m' for midd , 'e' for end"<<endl;
    cin>>d;
   
   switch (d)
    {
      case's':               //delete startif(start==NULL)
          {
              cout<<"no node to delete"<<endl;
          }
          else
          {
              temp1=start;
              start=start->next;
              start->prev=NULL;
              delete temp1;
          }
        break;
     
	 case'e':            //delete end
	
		/* INSERT YOUR CODE*/
      
		break;
     
	 case'm':               //delete mid
		
		/* INSERT YOUR CODE*/
          
		break;
    }
}

